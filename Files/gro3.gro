//////////////////////////////////////////////////////////////////////////////////////
//
// gro is protected by the UW OPEN SOURCE LICENSE, which is summaraize here.
// Please see the file LICENSE.txt for the complete license.
//
// THE SOFTWARE (AS DEFINED BELOW) AND HARDWARE DESIGNS (AS DEFINED BELOW) IS PROVIDED
// UNDER THE TERMS OF THIS OPEN SOURCE LICENSE (“LICENSE”).  THE SOFTWARE IS PROTECTED
// BY COPYRIGHT AND/OR OTHER APPLICABLE LAW.  ANY USE OF THIS SOFTWARE OTHER THAN AS
// AUTHORIZED UNDER THIS LICENSE OR COPYRIGHT LAW IS PROHIBITED.
//
// BY EXERCISING ANY RIGHTS TO THE SOFTWARE AND/OR HARDWARE PROVIDED HERE, YOU ACCEPT AND
// AGREE TO BE BOUND BY THE TERMS OF THIS LICENSE.  TO THE EXTENT THIS LICENSE MAY BE
// CONSIDERED A CONTRACT, THE UNIVERSITY OF WASHINGTON (“UW”) GRANTS YOU THE RIGHTS
// CONTAINED HERE IN CONSIDERATION OF YOUR ACCEPTANCE OF SUCH TERMS AND CONDITIONS.
//
// TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
//
//

include gro3standard
internal unit global_params ([ ... ]) "global_params";

internal unit randomness ([ ... ]) "randomness";
internal unit math_function ([ ... ]) "math_function";
internal unit bgate ([ ... ]) "bgate";
internal unit b_gate ([ ... ]) "bgate";
internal unit qgate ([ ... ]) "qgate";
internal unit q_gate ([ ... ]) "qgate";

internal unit cell_colour ([ ... ]) "cell_colour";
internal unit cell_color ([ ... ]) "cell_colour";

internal unit molecule ([ ... ]) "molecule";
internal unit protein ([ ... ]) "molecule";
internal unit regulation ([ ... ]) "regulation";
internal unit operon ([ ... ]) "operon";

internal unit oriT ([ ... ]) "oriT";
internal unit orit ([ ... ]) "oriT";
internal unit ori_t ([ ... ]) "oriT";
internal unit pilus ([ ... ]) "pilus";

internal unit copy_control ([ ... ]) "copy_control";
internal unit oriV ([ ... ]) "oriV";
internal unit oriv ([ ... ]) "oriV";
internal unit ori_v ([ ... ]) "oriV";
internal unit partition_system ([ ... ]) "partition";
internal unit partition ([ ... ]) "partition";

internal unit plasmid ([ ... ]) "bplasmid";
internal unit bplasmid ([ ... ]) "bplasmid";
internal unit b_plasmid ([ ... ]) "bplasmid";
internal unit qplasmid ([ ... ]) "qplasmid";

internal unit mutation ([ ... ]) "mutation";
internal unit mutation_process ([ ... ]) "mutation_process";
internal unit strain ([ ... ]) "strain";
internal unit cell_type ([ ... ]) "cell_type";

internal unit flux ([ ... ]) "flux";
internal unit signal ([ ... ]) "signal";
internal unit grid ([ ... ]) "grid";

internal unit timer ([ ... ]) "timer";
internal unit checkpoint ([ ... ]) "checkpoint";
internal unit cell_placer ([ ... ]) "cell_placer";
internal unit cell_plating ([ ... ]) "cell_plating";
internal unit signal_placer ([ ... ]) "signal_placer";

internal unit snapshot ([ ... ]) "snapshot";
internal unit cells_file ([ ... ]) "cells_file";
internal unit cells_plot ([ ... ]) "cells_plot";

//internal unit ready ([...]) "ready";
// Cell types
//internal unit ecolis ( [ ... ], 'a ) "ecolis";


//---M genetics parser



//colours
_green := [ r := 0.0, g := 1.0, b:= 0.0 ];
_red := [ r := 1.0, g := 0.0, b:= 0.0 ];
_blue := [ r := 0.0, g := 0.0, b:= 1.0 ];

_yellow := [ r := 1.0, g := 1.0, b:= 0.0 ];
_magenta := [ r := 1.0, g := 0.0, b:= 1.0 ];
_cyan := [ r := 0.0, g := 1.0, b:= 1.0 ];

_black := [ r := 0.0, g := 0.0, b:= 0.0 ];
_white := [ r := 1.0, g := 1.0, b:= 1.0 ];

//Cellsignals
//internal unit grid ( int, int, int ) "grid";

// Themes
dark_theme := 
[
	background := "#000000",
	cell_outline := "#444444",
	cell_selected := "#880000",
	message := "#ffffff",
	mouse := "#ffffff"
];

bright_theme := 
[
	background := "#ffffff",
	cell_outline := "#777777",
	cell_selected := "#ff0000",
	message := "#999999",
	mouse := "#000000"
];

//internal unit set_theme ( [ ... ] ) "set_theme";
//set_theme ( bright_theme );
//internal unit zoom ( real ) "zoom";



// Cell specific
//internal unit die() "die";
//internal unit divide() "divide";

//internal [ ... ] geometry() "geometry";

// Parameter Values
//internal unit set ( string, real ) "set";

// default global parameters
//set ( "dt", 0.1 );

// default paramters for E. coli
/*set ( "ecoli_growth_rate", 0.0346574 );   // reactions/min
set ( "ecoli_init_length", 2.0 );           //um
set ( "ecoli_division_length_mean", 3.75 ); // um
set ( "ecoli_division_size_variance", 0.15 ); // um
set ( "ecoli_diameter", 1.0 );            // um
set ( "ecoli_scale", 10.0 );              // pixels/um */


// Random generator parameter
//set ( "seed", 0.0 );
