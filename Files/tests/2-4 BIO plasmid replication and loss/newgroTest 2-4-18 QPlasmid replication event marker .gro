/*To test the event marker for replication from an oriv. It may be used to study the distribution, count the events at global level coupled to a "acc" stat, to report it with colour or to generate a response in the cell. As the visuals may not be updated every time step, a coupled molecule must be used. The synthesis time must be smaller than the time step and the degradation time determines the duration of the effects of the replication event. 

To test: try different expression times, eclipse period and growing cells. The count of replication events must match the total number of plasmids minus the initial number */

include gro3

copyNum := 20.0;
iniCopies := 1.0;

//autoVol := "none";
autoVol := "division";

global_params([ seed := 133087, show_plots := true, sensitivity := 0.0001 ]);


//----------------------BIOCIRCUITS---------------------------
//---cells
strain([ name := "str_wt", growth_rate := { 0.0, 0.0 }, ini_vol := 2.0 ]);

cell_type([ name := "cell_A"
	, strain := "str_wt"
	, qplasmids := {"qp_A"} 
	, qplasmid_amounts := { iniCopies }
	, qplasmids_as_concs := false
]);


//---gene expression
molecule([ name := "mol_rep", times := { -10.0, 0.01 }, times_var := { 0.0, 0.0 } ]);
operon([ name := "op_rep", gate := "ov_A_event", output := {"mol_rep"} ]);


//---replication
copy_control([ name := "cc_A", gate := "_ga_true", w := 0.00001 ]);

function([ name := "fun_qpAall", input := { "qp_A", "qp_A_eclipse" }, auto_vol := autoVol  ]);
function([ name := "fun_ovAall", input := { "ov_A", "ov_A_eclipse" }, auto_vol := autoVol ]);
qgate([ name := "qga_copyNum_A", input := "fun_ovAall", value := copyNum, operator := "<" ]);

oriv([ name := "ov_A"
	, copy_controls := {"cc_A"}
	, gate := "qga_copyNum_A"
	, vmax := 1.0
	, w := 0.1
	, eclipse_marker := "ov_A_eclipse"
	, eclipse := true
	, event := "ov_A_event"
]);

partition_system([ name := "part_A", gate := "_ga_true", fraction := { 0.5, 0.0 }, p := 0.5, vol_scaling := true ]);

qplasmid([ name := "qp_A"
	, partition_system := "part_A"
	, oriVs := {"ov_A"}
	, copy_controls := {"cc_A"}
	, eclipse := { 0.0, 0.0 }
	, eclipse_marker := "qp_A_eclipse"
	, operons := {"op_rep"}
]);


//------------ WORLD CONTROL -----------------------
//---placers
cell_placer([ name := "cp_A", cell_types := { "cell_A" }, amount := 1000.0, coords := [ r := 300.0 ] ]);


//------------ VISUALS -----------------------
cell_colour([ name := "ccol_green", gate := "ov_A_event", rgb := _green ]);
cell_colour([ name := "ccol_red", gate := "mol_rep", rgb := _red ]);

//---
//cells_plot([ name := "cplt_plas", fields := { "fun_qpA", "fun_qpA_eclipse", "fun_qpAall" } , stats := {"avg"} ]);
function([ name := "fun_allRaw", input := { "qp_A", "qp_A_eclipse" }, auto_vol := "none"  ]);
cells_plot([ name := "cplt_plasRaw", fields := { "qp_A", "qp_A_eclipse", "fun_allRaw" } , stats := {"sum"} ]);

cells_plot([ name := "cplt_events", fields := { "ov_A_event" } , stats := {"avg"} ]);
cells_plot([ name := "cplt_count", fields := { "ov_A_event" } , stats := {"acc"} ]);
cells_plot([ name := "cplt_mol", fields := { "mol_rep" } , stats := {"avg"} ]);