/*To test conditional replication of plasmids, whether there is replication or not, and variable copy number and/or rate that depends on the presence of the Repressilator oscillating proteins. Modiffy preset_Repressilator to long deterministic expression times for better testing.

To test, change selectedOriVs:
 - ov_A1: replication only when prot_A i present
 - ov_A2: different maximum copy number (copyNumA, copyNumB and unlimited) depending on the protein present. 
 - { "ov_B1", "ov_B2", "ov_B3" }: different rates depending on the present protein, each one represented with a different oriv

Notice that in this design, when more than one protein is present at the same time, the higher copy number is selected and the two rates are added
*/

include tests/0-presets/preset_Repressilator

copyNumA := 10.0;
copyNumB := 70.0;

//selectedOriVs := { "ov_A1" };
selectedOriVs := { "ov_A2" };
//selectedOriVs := { "ov_B1", "ov_B2", "ov_B3" };

global_params([ seed := 133087, show_plots := true ]);


//----------------------BIOCIRCUITS---------------------------
//---cells
strain([ name := "str_A", growth_rate := { 0.0, 0.0 }, ini_vol := 1.0  ]);
cell_type([ name := "cell_A"
	, strain := "str_A"
	, bplasmids := {"bp_ABC"}
	, molecules := {"prot_A"}
	, qplasmids := {"qp_A"} 
	, qplasmid_amounts := {1.0}
	, qplasmids_as_conc := false
]);


//---replication
oriv([ name := "ov_A1", gate := "ga_yesA", vmax := 0.1, w := 10.0 ]);

//---
qgate([ name := "qga_copyNumA", input := "qp_A", value := copyNumA, operator := "<" ]);
qgate([ name := "qga_copyNumB", input := "qp_A", value := copyNumB, operator := "<" ]);
bgate([ name := "bga_stateA", input := { "ga_yesA", "qga_copyNumA" } ]);
bgate([ name := "bga_stateB", input := { "ga_yesB", "qga_copyNumB" } ]);
bgate([ name := "bga_copyNum", type := "OR", input := { "bga_stateA", "bga_stateB", "ga_yesC" } ]);

oriv([ name := "ov_A2", gate := "bga_copyNum", vmax := 0.1, w := 10.0 ]);

//---
oriv([ name := "ov_B1", gate := "ga_yesA", vmax := 0.1, w := 10.0 ]);
oriv([ name := "ov_B2", gate := "ga_yesB", vmax := 0.01, w := 10.0 ]);
oriv([ name := "ov_B3", gate := "ga_yesC", vmax := 0.0, w := 10.0 ]);

//---
qplasmid([ name := "qp_A", oriVs := selectedOriVs ]);


//------------ WORLD CONTROL -----------------------
//---placers
cell_placer([ name := "cp_A", cell_types := { "cell_A" }, amount := 1000.0, coords := [ r := 500.0 ] ]);


//------------ VISUALS -----------------------
//cells_plot([ name := "cplt_qpA_sum", fields := { "qp_A" } , stats := {"sum" } ]);
cells_plot([ name := "cplt_qpA_range", fields := { "qp_A" } , stats := "range" ]);
cells_plot([ name := "cplt_qpA_avg", fields := { "qp_A" } , stats := {"avg" } ]);
cells_plot([ name := "cplt_protA_avg", fields := { "prot_A" } , stats := {"avg" } ]);
cells_plot([ name := "cplt_prots_avg", fields := { "prot_A",  "prot_B", "prot_C" } , stats := {"avg" } ]);